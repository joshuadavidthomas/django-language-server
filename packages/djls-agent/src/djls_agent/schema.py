# generated by datamodel-codegen:
#   filename:  crates/djls-ipc/src/messages/mod.rs

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel


class ErrorResponse(BaseModel):
    code: str
    message: str


class HealthCheck(BaseModel):
    status: str
    version: str


class HealthCheckRequestData(BaseModel):
    pass


class Messages(Enum):
    HEALTH_CHECK = 'HEALTH_CHECK'
    UNKNOWN = 'UNKNOWN'


class Request(BaseModel):
    """
    An untyped Request used only for schema generation. This type should not be constructed or used directly.
    """

    data: Dict[str, Any]
    message: Messages


class Response(BaseModel):
    """
    An untyped Response used only for schema generation. This type should not be constructed or used directly.
    """

    data: Dict[str, Any]
    error: Optional[ErrorResponse] = None
    message: Messages
    success: bool


class HealthCheckRequest(BaseModel):
    data: HealthCheckRequestData
    message: Messages


class HealthCheckResponse(BaseModel):
    data: Optional[HealthCheck] = None
    error: Optional[ErrorResponse] = None
    message: Messages
    success: bool


class HealthCheckMessage(BaseModel):
    request: HealthCheckRequest
    response: HealthCheckResponse