name: build

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: build-${{ github.head_ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  binary:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: aarch64
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
          - runner: windows-latest
            target: x86_64
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Prepare platform
        id: platform
        shell: bash
        run: |
          name="djls"
          target="${{ matrix.platform.target }}"

          if ${{ runner.os == 'Linux' }}; then
            name+="-linux"
            target+="-unknown-linux-gnu"
          elif ${{ runner.os == 'macOS' }}; then
            name+="-darwin"
            target+="-apple-darwin"
          elif ${{ runner.os == 'Windows' }}; then
            name+="-windows"
            target+="-pc-windows-msvc"
          fi

          if ${{ contains(matrix.platform.target, 'x86_64') }}; then
            name+="-x64"
          elif ${{ contains(matrix.platform.target, 'aarch64') }}; then
            name+="-arm64"
          fi

          if ${{ runner.os == 'Windows' }}; then
            source="target/${target}/release/djls.exe"
            dest="target/${target}/release/${name}.exe"
          else
            source="target/${target}/release/djls"
            dest="target/${target}/release/${name}"
          fi

          echo "name=$name" >> $GITHUB_OUTPUT
          echo "target=$target" >> $GITHUB_OUTPUT
          echo "source=$source" >> $GITHUB_OUTPUT
          echo "dest=$dest" >> $GITHUB_OUTPUT

      - uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c
        with:
          cache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          target: ${{ steps.platform.outputs.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: ${{ steps.platform.outputs.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Build
        run: |
          cargo build --release --target ${{ steps.platform.outputs.target }}

      - name: Prepare binary
        shell: bash
        run: |
          if ${{ runner.os != 'Windows' }}; then
            strip "${{ steps.platform.outputs.source }}"
          fi

          mv "${{ steps.platform.outputs.source }}" "${{ steps.platform.outputs.dest }}"

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ steps.platform.outputs.name }}
          path: ${{ steps.platform.outputs.dest }}

  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: s390x
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/setup-python@v6
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/setup-python@v6
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: musllinux_1_2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/setup-python@v6
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/setup-python@v6
        with:
          python-version: 3.x

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Build sdist
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist
